public class OperatorDemo3{
	public static void main(String []args){
	int num1=128;
	int num2=129;
	boolean res=false;
	String opera1="----位运算符举例-----";
	System.out.println("num1与num2的结果是："+(num1&num2));
	
	/* 	0000 0000 0000 0000 0000 0000 1000 0000(补)
		0000 0000 0000 0000 0000 0000 1000 0001(补)	
		----------------------------------------------
		0000 0000 0000 0000 0000 0000 1000 0000(补)
		 */
		
	System.out.println("num1或num2的结果是："+(num1|num2));	
		
	/* 	0000 0000 0000 0000 0000 0000 1000 0000(补)
		0000 0000 0000 0000 0000 0000 1000 0001(补)	
		----------------------------------------------
		0000 0000 0000 0000 0000 0000 1000 0001(补)
		 */
	
	System.out.println("num1异或num2的结果是："+(num1^num2));	
	/* 	0000 0000 0000 0000 0000 0000 1000 0000(补)
		0000 0000 0000 0000 0000 0000 1000 0001(补)	
		----------------------------------------------
		0000 0000 0000 0000 0000 0000 0000 0001(补)
		 */	

	System.out.println("num1非的结果是："+(~num1));	
	/* 	0000 0000 0000 0000 0000 0000 1000 0000(补)
		1111 1111 1111 1111 1111 1111 0111 1111(非 补)
		1000 0000 0000 0000 0000 0000 1000 0001(原)
	    ----------------------------------------------
		-129
		*/
	System.out.println("2<<3的结果是："+(2<<3));	
	
	/* 	0000 0000 0000 0000 0000 0000 0000 0010(补)
		0000 0000 0000 0000 0000 0000 0001 0000(补)
	    ----------------------------------------------
		16
		*/
	System.out.println("2<<3的结果是："+(-2<<3));	
	
	/* 	1000 0000 0000 0000 0000 0000 0000 0010(原)
		1111 1111 1111 1111 1111 1111 1111 1110(补)
		1111 1111 1111 1111 1111 1111 1111 0000(补)左移3位
	    --------------------------------------------------
		1000 0000 0000 0000 0000 0000 0000 1111   +1
		--------------------------------------------------
		1000 0000 0000 0000 0000 0000 0001 0000  （原码）
		-16
		*/
		
	System.out.println("16>>3的结果是："+(16>>3));	
	
	/* 	0000 0000 0000 0000 0000 0000 0001 0000(补)
		0000 0000 0000 0000 0000 0000 0000 0010(补)
	    --------------------------------------------------
		2
		*/
			
		
	System.out.println("-16>>3的结果是："+(-16>>3));	
	
	/* 	1000 0000 0000 0000 0000 0000 0001 0000(原)
		1111 1111 1111 1111 1111 1111 1111 0000(补)
		1111 1111 1111 1111 1111 1111 1111 1110(补)右移三位
	    --------------------------------------------------
		1000 0000 0000 0000 0000 0000 0000 0001  +1
		--------------------------------------------------
		1000 0000 0000 0000 0000 0000 0000 0010
		-2
		*/	
	System.out.println("-16>>>3的结果是："+(-16>>>3));	
	
	/* 	1000 0000 0000 0000 0000 0000 0001 0000(原)
		1111 1111 1111 1111 1111 1111 1111 0000(补)
		0001 1111 1111 1111 1111 1111 1111 1110(补)右移三位
	    --------------------------------------------------
		536870910

		*/		
		
	} 
	
	
	
}